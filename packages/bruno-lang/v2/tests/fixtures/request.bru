meta {
  name: Send Bulk SMS
  type: http
  seq: 1
}

get {
  url: https://api.textlocal.in/send
  body: json
  auth: bearer
}

query {
  apiKey: secret
  numbers: 998877665
  ~message: hello
}

headers {
  content-type: application%2Fjson
  Authorization: Bearer%20123
  ~transaction-id: %7B%7BtransactionId%7D%7D
}

auth:awsv4 {
  accessKeyId: A12345678
  secretAccessKey: thisisasecret
  sessionToken: thisisafakesessiontoken
  service: execute-api
  region: us-east-1
  profileName: test_profile
}

auth:basic {
  username: john
  password: secret
}

auth:bearer {
  token: 123
}

body:json {
  {
    "hello": "world"
  }
}

body:text {
  This is a text body
}

body:xml {
  <xml>
    <name>John</name>
    <age>30</age>
  </xml>
}

body:sparql {
  SELECT * WHERE {
    ?subject ?predicate ?object .
  }
  LIMIT 10
}

body:form-urlencoded {
  apikey: secret
  numbers: %2B91998877665
  ~message: hello
}

body:multipart-form {
  apikey: secret
  numbers: %2B91998877665
  ~message: hello
}

body:graphql {
  {
    launchesPast {
      launch_site {
        site_name
      }
      launch_success
    }
  }
}

body:graphql:vars {
  {
    "limit": 5
  }
}

vars:pre-request {
  departingDate: 2020-01-01
  ~returningDate: 2020-01-02
}

vars:post-response {
  token: %24res.body.token
  @orderNumber: %24res.body.orderNumber
  ~petId: %24res.body.id
  ~@transactionId: %24res.body.transactionId
}

assert {
  %24res.status: 200
  ~%24res.body.message: success
}

script:pre-request {
  const foo = 'bar';
}

tests {
  function onResponse(request, response) {
    expect(response.status).to.equal(200);
  }
}

docs {
  This request needs auth token to be set in the headers.
}
